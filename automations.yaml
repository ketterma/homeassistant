- id: '1755668156778'
  alias: Driveway - Smooth Sunset Fade
  description: Gradually fade in driveway lights starting 15 minutes before sunset
  triggers:
  - trigger: sun
    event: sunset
    offset: -00:15:00
  actions:
  - service: light.turn_on
    target:
      entity_id: light.driveway
    data:
      brightness_pct: 50
      transition: 900
  mode: single
- id: '1755668333675'
  alias: Driveway - Smooth Sunrise Fade Out
  description: Gradually fade out driveway lights starting 15 minutes after sunrise
  triggers:
  - trigger: sun
    event: sunrise
    offset: 00:15:00
  actions:
  - service: light.turn_off
    target:
      entity_id: light.driveway
    data:
      transition: 900
  mode: single
- id: security_lights_activate
  alias: Security Lights - Person/Vehicle Detected
  description: Activate security lighting when person or vehicle detected during night
    hours
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.driveway_af_person_detected
    - binary_sensor.driveway_af_vehicle_detected
    - binary_sensor.driveway_cdv_person_detected
    - binary_sensor.driveway_cdv_vehicle_detected
    - binary_sensor.g4_pro_person_detected
    - binary_sensor.g4_pro_vehicle_detected
    - binary_sensor.g4_doorbell_person_detected
    - binary_sensor.g4_doorbell_vehicle_detected
    to: 'on'
  conditions:
  - condition: sun
    after: sunset
    before: sunrise
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: timer.security_lights_timer
        state: idle
      sequence:
      - service: scene.create
        data:
          scene_id: security_lights_restore
          snapshot_entities:
          - light.driveway
          - light.front_porch_1
          - light.front_porch_2
          - light.front_porch_3
          - light.back_door_lantern
      - service: light.turn_on
        target:
          entity_id: light.driveway
        data:
          brightness_pct: 80
          transition: 5
      - service: light.turn_on
        target:
          entity_id:
          - light.front_porch_1
          - light.front_porch_2
          - light.front_porch_3
          - light.back_door_lantern
        data:
          brightness_pct: 100
          transition: 5
  - service: timer.start
    target:
      entity_id: timer.security_lights_timer
  mode: restart
- id: security_lights_reset
  alias: Security Lights - Reset After Timer
  description: Restore lights to original state after 5 minutes of no activity
  triggers:
  - trigger: event
    event_type: timer.finished
    event_data:
      entity_id: timer.security_lights_timer
  actions:
  - service: scene.turn_on
    target:
      entity_id: scene.security_lights_restore
    data:
      transition: 5
  - service: scene.delete
    target:
      entity_id: scene.security_lights_restore
  mode: single
- id: '1756056166666'
  alias: Camera Vision
  description: ''
  use_blueprint:
    path: valentinfrlch/event_summary.yaml
    input:
      camera_entities:
      - camera.g4_pro_high_2
      - camera.g3_bullet_high
      - camera.g4_pro_high_3
      - camera.g4_pro_high
      provider: 01K3EH5S6PF16B7X3ZRWVMW0FJ
      notify_device:
      - 83960fe87fb8b1c1bb5ab0a4de1b8011
      preview_mode: Live Preview
      notification_time: ''
      model: gemini-2.5-flash
- id: github_config_auto_deploy
  alias: "GitHub Config - Auto Deploy (Event-Driven)"
  description: "Automatically deploy Home Assistant configuration when main branch is updated via GitHub webhook"
  triggers:
  - trigger: webhook
    webhook_id: "homeassistant_config_webhook"
    local_only: false
  conditions:
  # Only process pushes to main branch of homeassistant repository  
  - condition: template
    value_template: >
      {{ trigger.json.ref == 'refs/heads/main' and 
         trigger.json.repository.name == 'homeassistant' }}
  # Only proceed if configuration files were modified
  - condition: template  
    value_template: >
      {% set config_files = ['configuration.yaml', 'automations.yaml', 'scripts.yaml', 'scenes.yaml'] %}
      {% set theme_pattern = 'themes/' %}
      {% set changed_files = trigger.json.commits | map(attribute='modified') | sum(start=[]) + 
                            trigger.json.commits | map(attribute='added') | sum(start=[]) %}
      {{ changed_files | select('in', config_files) | list | length > 0 or 
         changed_files | select('match', theme_pattern) | list | length > 0 }}
  actions:
  # Pull latest changes from repository
  - service: shell_command.git_pull
    alias: "Pull latest configuration from GitHub"
  - delay: "00:00:05"
  
  # Determine which configurations need reloading based on changed files
  - variables:
      changed_files: >
        {{ trigger.json.commits | map(attribute='modified') | sum(start=[]) + 
           trigger.json.commits | map(attribute='added') | sum(start=[]) }}
      commit_message: "{{ trigger.json.head_commit.message }}"
      commit_sha: "{{ trigger.json.head_commit.id[:7] }}"
      author_name: "{{ trigger.json.head_commit.author.name }}"

  # Reload automations if automations.yaml changed
  - if:
    - condition: template
      value_template: "{{ 'automations.yaml' in changed_files }}"
    then:
    - service: automation.reload
      alias: "Reload automations"

  # Reload scripts if scripts.yaml changed  
  - if:
    - condition: template
      value_template: "{{ 'scripts.yaml' in changed_files }}"
    then:
    - service: script.reload
      alias: "Reload scripts"

  # Reload scenes if scenes.yaml changed
  - if:
    - condition: template
      value_template: "{{ 'scenes.yaml' in changed_files }}"
    then:
    - service: scene.reload
      alias: "Reload scenes"

  # Reload themes if any theme file changed
  - if:
    - condition: template
      value_template: "{{ changed_files | select('match', 'themes/') | list | length > 0 }}"
    then:
    - service: frontend.reload_themes
      alias: "Reload themes"

  # Check and reload core config if configuration.yaml changed
  - if:
    - condition: template
      value_template: "{{ 'configuration.yaml' in changed_files }}"
    then:
    - service: homeassistant.check_config
      alias: "Validate configuration"
    - delay: "00:00:10"  
    - service: homeassistant.reload_core_config
      alias: "Reload core configuration"

  # Create success notification with deployment details
  - service: persistent_notification.create
    data:
      title: "ðŸš€ Configuration Deployed Successfully"
      message: >
        **Deployment Complete**
        
        **Commit:** {{ commit_sha }}
        **Author:** {{ author_name }}  
        **Message:** {{ commit_message }}
        
        **Changes Applied:**
        {% if 'configuration.yaml' in changed_files -%}
        â€¢ Core configuration reloaded
        {% endif -%}
        {% if 'automations.yaml' in changed_files -%}
        â€¢ Automations reloaded
        {% endif -%}
        {% if 'scripts.yaml' in changed_files -%}
        â€¢ Scripts reloaded  
        {% endif -%}
        {% if 'scenes.yaml' in changed_files -%}
        â€¢ Scenes reloaded
        {% endif -%}
        {% if changed_files | select('match', 'themes/') | list | length > 0 -%}
        â€¢ Themes reloaded
        {% endif -%}
        
        Deployed at {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
      notification_id: "github_deploy_success"
  mode: single
