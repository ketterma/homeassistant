- id: '1755668156778'
  alias: Driveway - Smooth Sunset Fade
  description: Gradually fade in driveway lights starting 15 minutes before sunset
  triggers:
  - trigger: sun
    event: sunset
    offset: -00:15:00
  actions:
  - service: light.turn_on
    target:
      entity_id: light.driveway
    data:
      brightness_pct: 50
      transition: 900
  mode: single
- id: '1755668333675'
  alias: Driveway - Smooth Sunrise Fade Out
  description: Gradually fade out driveway lights starting 15 minutes after sunrise
  triggers:
  - trigger: sun
    event: sunrise
    offset: 00:15:00
  actions:
  - service: light.turn_off
    target:
      entity_id: light.driveway
    data:
      transition: 900
  mode: single
- id: security_lights_activate
  alias: Security Lights - Person/Vehicle Detected
  description: Activate security lighting when person or vehicle detected during night
    hours
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.driveway_af_person_detected
    - binary_sensor.driveway_af_vehicle_detected
    - binary_sensor.driveway_cdv_person_detected
    - binary_sensor.driveway_cdv_vehicle_detected
    - binary_sensor.g4_pro_person_detected
    - binary_sensor.g4_pro_vehicle_detected
    - binary_sensor.g4_doorbell_person_detected
    - binary_sensor.g4_doorbell_vehicle_detected
    to: 'on'
  conditions:
  - condition: sun
    after: sunset
    before: sunrise
  actions:
  - choose:
    - conditions:
      - condition: state
        entity_id: timer.security_lights_timer
        state: idle
      sequence:
      - service: scene.create
        data:
          scene_id: security_lights_restore
          snapshot_entities:
          - light.driveway
          - light.front_porch_1
          - light.front_porch_2
          - light.front_porch_3
          - light.back_door_lantern
      - service: light.turn_on
        target:
          entity_id: light.driveway
        data:
          brightness_pct: 80
          transition: 5
      - service: light.turn_on
        target:
          entity_id:
          - light.front_porch_1
          - light.front_porch_2
          - light.front_porch_3
          - light.back_door_lantern
        data:
          brightness_pct: 100
          transition: 5
  - service: timer.start
    target:
      entity_id: timer.security_lights_timer
  mode: restart
- id: security_lights_reset
  alias: Security Lights - Reset After Timer
  description: Restore lights to original state after 5 minutes of no activity
  triggers:
  - trigger: event
    event_type: timer.finished
    event_data:
      entity_id: timer.security_lights_timer
  actions:
  - service: scene.turn_on
    target:
      entity_id: scene.security_lights_restore
    data:
      transition: 5
  - service: scene.delete
    target:
      entity_id: scene.security_lights_restore
  mode: single
- id: '1756056166666'
  alias: Camera Vision
  description: ''
  use_blueprint:
    path: valentinfrlch/event_summary.yaml
    input:
      camera_entities:
      - camera.g4_pro_high_2
      - camera.g3_bullet_high
      - camera.g4_pro_high_3
      - camera.g4_pro_high
      provider: 01K3EH5S6PF16B7X3ZRWVMW0FJ
      notify_device:
      - 83960fe87fb8b1c1bb5ab0a4de1b8011
      preview_mode: Live Preview
      notification_time: ''
      model: gemini-2.5-flash
- id: petkit_water_low_notification
  alias: PetKit - Water Level Low Notification
  description: Send push notification when PetKit device water level is low
  triggers:
  - trigger: numeric_state
    entity_id: 
      # Replace these with your actual PetKit water level sensor entities
      # Example entities (uncomment and modify as needed):
      # - sensor.petkit_water_fountain_water_level
      # - sensor.petkit_feeder_water_level
      # - binary_sensor.petkit_water_fountain_water_low
    below: 20  # Trigger when water level is below 20%
    for:
      minutes: 5  # Wait 5 minutes to avoid spam notifications
  conditions:
    # Only send notifications during reasonable hours
    - condition: time
      after: '07:00:00'
      before: '22:00:00'
    # Don't send if notification was sent recently
    - condition: template
      value_template: >
        {{ (now() - state_attr('automation.petkit_water_low_notification', 'last_triggered') | default(now() - timedelta(hours=2))).total_seconds() > 3600 }}
  actions:
  # Option 1: Use device-based notifications (similar to your existing setup)
  - action: notify.mobile_app_device  # Replace 'device' with your actual device name
    data:
      title: "ðŸš° PetKit Water Low"
      message: "Your pet's water fountain is running low ({{ trigger.to_state.state }}%). Please refill soon!"
      data:
        notification_id: "petkit_water_low"
        tag: "petkit_water"
        group: "pet_care"
        actions:
          - action: "PETKIT_REFILLED"
            title: "Refilled"
        priority: high
        icon_url: "https://brands.home-assistant.io/_/petkit/icon.png"
  # Option 2: Alternative using the default notification service
  # Uncomment the lines below if you prefer the default service:
  # - action: notify.notify
  #   data:
  #     title: "ðŸš° PetKit Water Low"  
  #     message: "Your pet's water fountain is running low ({{ trigger.to_state.state }}%). Please refill soon!"
  mode: single
- id: petkit_water_refilled_acknowledgment
  alias: PetKit - Water Refilled Acknowledgment
  description: Handle acknowledgment when water is refilled
  triggers:
  - trigger: event
    event_type: mobile_app_notification_action
    event_data:
      action: "PETKIT_REFILLED"
  actions:
  - action: notify.mobile_app_device  # Replace 'device' with your actual device name
    data:
      title: "âœ… Water Refilled"
      message: "Thank you! Your pet's water has been marked as refilled."
      data:
        notification_id: "petkit_water_refilled"
        tag: "petkit_water"
  mode: single
